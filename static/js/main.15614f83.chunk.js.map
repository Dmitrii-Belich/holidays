{"version":3,"sources":["components/EmployeeSelect/EmployeeSelect.tsx","components/HolidaysCalendar/HolidaysCalendar.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Option","Select","EmployeeSelect","holidays","handleChange","reducer","emp","item","find","e","id","employee_info","push","useState","reduce","employees","setEmployees","useEffect","map","tagRender","props","label","value","closable","onClose","color","onMouseDown","event","preventDefault","stopPropagation","mode","allowClear","defaultValue","style","width","placeholder","onChange","name","background","marginBottom","HolidaysCalendar","existed","holiday","includes","dateCellRender","listData","currentDate","Date","filter","startDate","start_at","endDate","end_at","getListData","format","className","title","uuid","monthCellRender","currentMonth","getFullYear","getMonth","startMonth","endMonth","getMonthData","locale","lang","yearFormat","today","now","backToToday","ok","timeSelect","dateSelect","decadeSelect","dayFormat","dateFormat","dateTimeFormat","previousYear","shortWeekDays","shortMonths","App","isLoading","setIsLoading","setHolidays","activeEmployees","setActiveEmployees","filteredHolidays","setFilteredHolidays","fetch","then","res","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAGQA,EAAWC,IAAXD,OAEO,SAASE,EAAT,GAA+F,IAAtEC,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,aACxCC,EAAU,SAACC,EAAYC,GAIzB,OAHKD,EAAIE,MAAK,SAACC,GAAD,OAAuBA,EAAEC,KAAOH,EAAKI,cAAcD,OAC7DJ,EAAIM,KAAKL,EAAKI,eAEXL,GAL8F,EAQvEO,mBAASV,EAASW,OAAOT,EAAS,KARqC,mBAQlGU,EARkG,KAQvFC,EARuF,KAoCzG,OA1BAC,qBAAU,WACND,EAAab,EAASW,OAAOT,EAAS,KACtCD,EAAaD,EAASW,OAAOT,EAAS,IAAIa,KAAI,SAACX,GAAD,OAAyBA,EAAKG,SAC7E,CAACP,IAwBA,8BACI,cAAC,IAAD,CACIgB,UAxBZ,SAAmBC,GAAkE,IACzEC,EAAoCD,EAApCC,MAAOC,EAA6BF,EAA7BE,MAAOC,EAAsBH,EAAtBG,SAAUC,EAAYJ,EAAZI,QAM1BC,EAAQV,EAAUP,MAAK,qBAAEE,KAAeY,KAASP,EAAUP,MAAK,qBAAEE,KAAeY,KAAOG,MAAQ,OACtG,OACI,cAAC,IAAD,CACIA,MAAOA,EACPC,YATmB,SAACC,GACxBA,EAAMC,iBACND,EAAME,mBAQFN,SAAUA,EACVC,QAASA,EAJb,SAMKH,KAUDS,KAAK,WACLC,YAAU,EACVC,aAAcjB,EAAUG,KAAI,qBAAER,MAC9BuB,MAAO,CAAEC,MAAO,QAChBC,YAAY,gHACZC,SAAUhC,EAPd,SASKW,EAAUG,KAAI,gBAAER,EAAF,EAAEA,GAAI2B,EAAN,EAAMA,KAAMZ,EAAZ,EAAYA,MAAZ,OAA+D,cAACzB,EAAD,CAAQiC,MAAO,CAACK,WAAYb,EAAOA,MAAO,QAASc,aAAc,OAAiBjB,MAAOZ,EAAzF,SAA8F2B,GAAhB3B,U,sCChD7J,SAAS8B,EAAT,GAA0D,IAA/BrC,EAA8B,EAA9BA,SACtC,SAASE,EAASC,EAAYC,GAG1B,IAAMkC,EAAUnC,EAAIE,MAAK,SAACC,GAAD,OAEJA,EAAEE,cAAcD,KAAOH,EAAKI,cAAcD,MAM/D,OALK+B,EAEOA,EAAQC,QAAQL,KAAKM,SAASpC,EAAKmC,QAAQL,QACnDI,EAAQC,QAAQL,MAAhB,YAA6B9B,EAAKmC,QAAQL,OAF1C/B,EAAIM,KAAKL,GAIND,EA2GX,OACI,cAAC,IAAD,CAAUsC,eAhGd,SAAwBtB,GAGpB,IAAMuB,EAbV,SAAqBvB,GACjB,IAAMwB,EAAc,IAAIC,KAAKzB,GAE7B,OAAOnB,EAAS6C,QAAO,SAACzC,GACpB,IAAM0C,EAAY,IAAIF,KAAKxC,EAAK2C,UAC1BC,EAAU,IAAIJ,KAAKxC,EAAK6C,QAC9B,OAAON,GAAeG,GAAaH,GAAeK,KAOrCE,CAAY/B,EAAMgC,OAAO,eAC1C,OACI,qBAAKC,UAAU,WAAf,SACKV,EAAS3B,KAAI,SAACX,GAUX,OAAO,cAAC,IAAD,CAAyBiD,MAAOjD,EAAKmC,QAAQL,KAA7C,SACH,qBAAKkB,UAAU,aAAatB,MAAO,CAACK,WAAY/B,EAAKI,cAAcc,OAAnE,SAA4ElB,EAAKI,cAAc0B,QAD9E9B,EAAKkD,YAgFIC,gBA3D9C,SAAyBpC,GACrB,IAAMuB,EAdV,SAAsBvB,GAClB,IAAMwB,EAAc,IAAIC,KAAKzB,GACvBqC,EAAY,UAAMb,EAAYc,cAAlB,YAAmCd,EAAYe,YAEjE,OAAO1D,EAAS6C,QAAO,SAACzC,GACpB,IAAM0C,EAAY,IAAIF,KAAKxC,EAAK2C,UAC1BY,EAAU,UAAMb,EAAUW,cAAhB,YAAiCX,EAAUY,YACrDV,EAAU,IAAIJ,KAAKxC,EAAK6C,QACxBW,EAAQ,UAAMZ,EAAQS,cAAd,YAA+BT,EAAQU,YACrD,OAAOF,IAAiBG,GAAcH,IAAiBI,KACxDjD,OAAOT,EAAS,IAIF2D,CAAa1C,EAAMgC,OAAO,eAC3C,OAAQ,8BACHT,EAAS3B,KAAI,SAACX,GAAD,OAKV,cAAC,IAAD,CAAyBiD,MAAOjD,EAAKmC,QAAQL,KAA7C,SACI,qBAAsBJ,MAAO,CAACK,WAAY/B,EAAKI,cAAcc,OAA7D,SAAuElB,EAAKI,cAAc0B,MAAhF9B,EAAKkD,OADLlD,EAAKkD,YAmDiDQ,OA9CjE,CACXC,KAAM,CACFD,OAAQ,QAERE,WAAY,OACZC,MAAQ,QACRC,IAAK,MACLC,YAAa,gBACbC,GAAI,KACJC,WAAY,cACZC,WAAY,cACZ,MAAS,QACT,MAAS,iCACT,KAAQ,qBACR,cAAiB,0BACjB,UAAa,wBACb,YAAe,iBACf,WAAc,gBACdC,aAAc,kBACdC,UAAW,IACXC,WAAY,WACZC,eAAgB,oBAChBC,aAAe,6BACf,SAAY,8BACZ,eAAkB,cAClB,WAAc,cACd,gBAAmB,eACnB,YAAe,eACfC,cAAe,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBACpDC,YAAa,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,2BAAQ,uCAAU,mDAAY,6CAAW,uCAAU,8CACvH,YAAe,eAUnB,iBAAoB,CAChB,YAAe,kBCxEZC,MAxCf,WAAgB,IAAD,EACuBpE,oBAAS,GADhC,mBACJqE,EADI,KACOC,EADP,OAEqBtE,mBAAS,IAF9B,mBAEJV,EAFI,KAEMiF,EAFN,OAGmCvE,mBAAS,IAH5C,mBAGJwE,EAHI,KAGaC,EAHb,OAIqCzE,mBAAS,IAJ9C,mBAIJ0E,EAJI,KAIcC,EAJd,KAwBb,OAdEvE,qBAAU,WAGFuE,EAAoBrF,EAAS6C,QAAO,gBAAErC,EAAF,EAAEA,cAAF,OAAqB0E,EAAgB1C,SAAShC,EAAcD,UAErG,CAAC2E,EAAiBlF,IAErBc,qBAAU,WACNwE,MAAM,2BAA2BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAC,GAC1DP,EAAYO,GACZR,GAAa,QAElB,IAGC,qBAAK5B,UAAU,MAAf,SACK2B,EAAY,cAAC,IAAD,IACT,qCACI,iCACI,cAAChF,EAAD,CAAgBE,aAvBJ,SAACkB,GAC7BgE,EAAmBhE,IAsBoDnB,SAAUA,MAErE,+BACI,cAAC,EAAD,CAAkBA,SAAUoF,YCzBrCM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.15614f83.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Select, Tag } from 'antd';\n\nconst { Option } = Select;\n\nexport default function EmployeeSelect({holidays, handleChange}: {holidays: Array<any>, handleChange: any }) {\n    const reducer = (emp: any[], item: { id: number; employee_info: any; }) => {\n        if (!emp.find((e: { id: number }) => e.id === item.employee_info.id)) {\n            emp.push(item.employee_info)\n        }\n        return emp\n    }\n\n    const [employees, setEmployees] = useState(holidays.reduce(reducer, []))\n\n    useEffect(() => {\n        setEmployees(holidays.reduce(reducer, []))\n        handleChange(holidays.reduce(reducer, []).map((item: { id: any; } ) => item.id))\n    }, [holidays])\n\n    function tagRender(props: { label: any; value: any; closable: any; onClose: any; }) {\n        const { label, value, closable, onClose } = props;\n        const onPreventMouseDown = (event: { preventDefault: () => void; stopPropagation: () => void; }) => {\n            event.preventDefault();\n            event.stopPropagation();\n        };\n        // @ts-ignore\n        const color = employees.find(({id}) => id === value) ? employees.find(({id}) => id === value).color : 'gray'\n        return (\n            <Tag\n                color={color}\n                onMouseDown={onPreventMouseDown}\n                closable={closable}\n                onClose={onClose}\n            >\n                {label}\n            </Tag>\n        );\n    }\n\n    // @ts-ignore\n    return (\n        <div>\n            <Select\n                tagRender={tagRender}\n                mode=\"multiple\"\n                allowClear\n                defaultValue={employees.map(({id}: {id: any}) => id)}\n                style={{ width: '100%' }}\n                placeholder=\"Выберите сотрудника\"\n                onChange={handleChange}\n            >\n                {employees.map(({id, name, color}: {id: any, name: string, color: string}) => <Option style={{background: color, color: 'white', marginBottom: '5px'}} key={id} value={id}>{name}</Option>)}\n            </Select>\n        </div>\n    );\n}\n","import { Calendar, Tooltip } from 'antd';\nimport { Key, ReactChild, ReactFragment, ReactPortal } from 'react';\nimport './index.css';\n\nexport default function HolidaysCalendar({holidays}: { holidays: any }) {\n    function reducer (emp: any[], item: {\n        holiday: any;\n        id: number; employee_info: any; }) {\n        const existed = emp.find((e: {\n            employee_info: any;\n            id: number }) => e.employee_info.id === item.employee_info.id)\n        if (!existed) {\n            emp.push(item)\n        } else if (!existed.holiday.name.includes(item.holiday.name)) {\n            existed.holiday.name += `, ${item.holiday.name}`\n        }\n        return emp\n    }\n    function getListData(value: string) {\n        const currentDate = new Date(value)\n\n        return holidays.filter((item: { start_at: string | number | Date; end_at: string | number | Date; }) => {\n            const startDate = new Date(item.start_at)\n            const endDate = new Date(item.end_at)\n            return currentDate >= startDate && currentDate <= endDate\n        })\n    }\n\n    function dateCellRender(value: {\n        format(dddd: string): string;\n    }) {\n        const listData = getListData(value.format('YYYY-MM-DD'));\n        return (\n            <div className=\"holidays\">\n                {listData.map((item: {\n                    holiday: {\n                        name: string\n                    }\n                    uuid: any;\n                    employee_info: {\n                        color: any;\n                        name: any;\n                    };\n                }) => {\n                    return <Tooltip key={item.uuid} title={item.holiday.name}>\n                        <div className=\"month-cell\" style={{background: item.employee_info.color}}>{item.employee_info.name}</div>\n                    </Tooltip>\n                })}\n            </div>\n        );\n    }\n\n    function getMonthData(value: string) {\n        const currentDate = new Date(value)\n        const currentMonth = `${currentDate.getFullYear()}.${currentDate.getMonth()}`\n\n        return holidays.filter((item: { start_at: string | number | Date; end_at: string | number | Date; }) => {\n            const startDate = new Date(item.start_at)\n            const startMonth = `${startDate.getFullYear()}.${startDate.getMonth()}`\n            const endDate = new Date(item.end_at)\n            const endMonth = `${endDate.getFullYear()}.${endDate.getMonth()}`\n            return currentMonth === startMonth || currentMonth === endMonth\n        }).reduce(reducer, [])\n    }\n\n    function monthCellRender(value: { format(dddd: string): string }) {\n        const listData = getMonthData(value.format('YYYY-MM-DD'));\n        return (<div>\n            {listData.map((item: {\n                holiday:  {\n                    name: any;\n                };\n                uuid: Key | null | undefined; employee_info: { color: any; name: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; }; }) =>\n                <Tooltip key={item.uuid} title={item.holiday.name}>\n                    <div key={item.uuid}  style={{background: item.employee_info.color }}>{item.employee_info.name}</div>\n                </Tooltip>)}\n        </div>)\n    }\n    const locale = {\n        lang: {\n            locale: \"ru_RU\",\n            /** Display month before year in date panel header */\n            yearFormat: \"YYYY\",\n            today:  \"Today\",\n            now: \"Now\",\n            backToToday: \"Back to today\",\n            ok: \"Ok\",\n            timeSelect: \"Select time\",\n            dateSelect: \"Select date\",\n            \"clear\": \"Clear\",\n            \"month\": \"Месяц\",\n            \"year\": \"Год\",\n            \"previousMonth\": \"Previous month (PageUp)\",\n            \"nextMonth\": \"Next month (PageDown)\",\n            \"monthSelect\": \"Choose a month\",\n            \"yearSelect\": \"Choose a year\",\n            decadeSelect: \"Choose a decade\",\n            dayFormat: \"D\",\n            dateFormat: \"M/D/YYYY\",\n            dateTimeFormat: \"M/D/YYYY HH:mm:ss\",\n            previousYear:  \"Last year (Control + left)\",\n            \"nextYear\": \"Next year (Control + right)\",\n            \"previousDecade\": \"Last decade\",\n            \"nextDecade\": \"Next decade\",\n            \"previousCentury\": \"Last century\",\n            \"nextCentury\": \"Next century\",\n            shortWeekDays: [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\n            shortMonths: ['Январь', 'Февраль', \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"],\n            \"placeholder\": \"Select date\",\n            // yearPlaceholder?: string;\n            // quarterPlaceholder?: string;\n            // monthPlaceholder?: string;\n            // weekPlaceholder?: string;\n            // rangeYearPlaceholder?: [string, string];\n            // rangeMonthPlaceholder?: [string, string];\n            // rangeWeekPlaceholder?: [string, string];\n            // rangePlaceholder?: [string, string];\n        },\n        \"timePickerLocale\": {\n            \"placeholder\": \"Select time\"\n        }\n    }\n\n    return (\n        <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} locale={locale} />\n    )\n}\n\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport EmployeeSelect from \"./EmployeeSelect/EmployeeSelect\";\nimport { Spin } from 'antd';\nimport HolidaysCalendar from \"./HolidaysCalendar/HolidaysCalendar\";\n\nfunction App() {\n    const [isLoading, setIsLoading] = useState(true)\n    const [holidays, setHolidays] = useState([])\n    const [activeEmployees, setActiveEmployees] = useState([])\n    const [filteredHolidays, setFilteredHolidays] = useState([])\n\n    const employeesChangesHandler = (value: number[]) => { // @ts-ignore\n        setActiveEmployees(value)\n    }\n\n    useEffect(() => {\n\n            // @ts-ignore\n            setFilteredHolidays(holidays.filter(({employee_info}) => activeEmployees.includes(employee_info.id)))\n\n    }, [activeEmployees, holidays])\n\n    useEffect(() => {\n        fetch('/holidays/holidays.json').then(res => res.json()).then(res => {\n            setHolidays(res)\n            setIsLoading(false)\n        })\n    }, [])\n\n  return (\n        <div className=\"App\">\n            {isLoading ? <Spin/> :\n                <>\n                    <header>\n                        <EmployeeSelect handleChange={employeesChangesHandler} holidays={holidays}/>\n                    </header>\n                    <main>\n                        <HolidaysCalendar holidays={filteredHolidays}/>\n                    </main>\n                </>\n            }\n        </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}